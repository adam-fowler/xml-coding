{"Typealiases.html#/s:10XMLEncoder17DefaultArrayCodera":{"name":"DefaultArrayCoder","abstract":"<p>Undocumented</p>"},"Typealiases.html#/s:10XMLEncoder22DefaultDictionaryCodera":{"name":"DefaultDictionaryCoder","abstract":"<p>Undocumented</p>"},"Structs/DefaultDictionaryCoderProperties.html#/s:10XMLEncoder32DefaultDictionaryCoderPropertiesV5entrySSSgvpZ":{"name":"entry","abstract":"<p>Undocumented</p>","parent_name":"DefaultDictionaryCoderProperties"},"Structs/DefaultDictionaryCoderProperties.html#/s:10XMLEncoder32DefaultDictionaryCoderPropertiesV3keySSvpZ":{"name":"key","abstract":"<p>Undocumented</p>","parent_name":"DefaultDictionaryCoderProperties"},"Structs/DefaultDictionaryCoderProperties.html#/s:10XMLEncoder32DefaultDictionaryCoderPropertiesV5valueSSvpZ":{"name":"value","abstract":"<p>Undocumented</p>","parent_name":"DefaultDictionaryCoderProperties"},"Structs/DefaultArrayCoderProperties.html#/s:10XMLEncoder27DefaultArrayCoderPropertiesV6memberSSvpZ":{"name":"member","abstract":"<p>Undocumented</p>","parent_name":"DefaultArrayCoderProperties"},"Structs/DictionaryCoder.html#/s:10XMLEncoder15DictionaryCoderV12CodableValuea":{"name":"CodableValue","abstract":"<p>Undocumented</p>","parent_name":"DictionaryCoder"},"Structs/DictionaryCoder.html#/s:10XMLEncoder15DictionaryCoderV6decode4fromSDyq_q0_Gs7Decoder_p_tKFZ":{"name":"decode(from:)","abstract":"<p>Undocumented</p>","parent_name":"DictionaryCoder"},"Structs/DictionaryCoder.html#/s:10XMLEncoder15DictionaryCoderV6encode5value2toySDyq_q0_G_s7Encoder_ptKFZ":{"name":"encode(value:to:)","abstract":"<p>Undocumented</p>","parent_name":"DictionaryCoder"},"Structs/ArrayCoder.html#/s:10XMLEncoder10ArrayCoderV12CodableValuea":{"name":"CodableValue","abstract":"<p>Undocumented</p>","parent_name":"ArrayCoder"},"Structs/ArrayCoder.html#/s:10XMLEncoder10ArrayCoderV6decode4fromSayq_Gs7Decoder_p_tKFZ":{"name":"decode(from:)","abstract":"<p>Undocumented</p>","parent_name":"ArrayCoder"},"Structs/ArrayCoder.html#/s:10XMLEncoder10ArrayCoderV6encode5value2toySayq_G_s7Encoder_ptKFZ":{"name":"encode(value:to:)","abstract":"<p>Undocumented</p>","parent_name":"ArrayCoder"},"Structs/OptionalCoding.html#/s:10XMLEncoder14OptionalCodingV12wrappedValueACyxG07CodableE0QzSg_tcfc":{"name":"init(wrappedValue:)","abstract":"<p>Undocumented</p>","parent_name":"OptionalCoding"},"Structs/OptionalCoding.html#/s:Se4fromxs7Decoder_p_tKcfc":{"name":"init(from:)","parent_name":"OptionalCoding"},"Structs/OptionalCoding.html#/s:SE6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","parent_name":"OptionalCoding"},"Structs/OptionalCoding.html#/s:10XMLEncoder14OptionalCodingV12wrappedValue07CodableE0QzSgvp":{"name":"wrappedValue","abstract":"<p>Undocumented</p>","parent_name":"OptionalCoding"},"Structs/Coding.html#/s:10XMLEncoder6CodingV12wrappedValueACyxG07CodableD0Qz_tcfc":{"name":"init(wrappedValue:)","abstract":"<p>Undocumented</p>","parent_name":"Coding"},"Structs/Coding.html#/s:Se4fromxs7Decoder_p_tKcfc":{"name":"init(from:)","parent_name":"Coding"},"Structs/Coding.html#/s:SE6encode2toys7Encoder_p_tKF":{"name":"encode(to:)","parent_name":"Coding"},"Structs/Coding.html#/s:10XMLEncoder6CodingV12wrappedValue07CodableD0Qzvp":{"name":"wrappedValue","abstract":"<p>Undocumented</p>","parent_name":"Coding"},"Structs/Coding.html":{"name":"Coding","abstract":"<p>Property wrapper that applies a custom encoder and decoder to its wrapped value</p>"},"Structs/OptionalCoding.html":{"name":"OptionalCoding","abstract":"<p>Property wrapper that applies a custom encoder and decoder to its wrapped optional value</p>"},"Structs/ArrayCoder.html":{"name":"ArrayCoder","abstract":"<p>Undocumented</p>"},"Structs/DictionaryCoder.html":{"name":"DictionaryCoder","abstract":"<p>Undocumented</p>"},"Structs/DefaultArrayCoderProperties.html":{"name":"DefaultArrayCoderProperties","abstract":"<p>The most common array encoding property is an element name &ldquo;member&rdquo;</p>"},"Structs/DefaultDictionaryCoderProperties.html":{"name":"DefaultDictionaryCoderProperties","abstract":"<p>The most common dictionary encoding properties are element name &ldquo;entry&rdquo;, key name &ldquo;key&rdquo;, value name &ldquo;value&rdquo;</p>"},"Protocols/DictionaryCoderProperties.html#/s:10XMLEncoder25DictionaryCoderPropertiesP5entrySSSgvpZ":{"name":"entry","abstract":"<p>Undocumented</p>","parent_name":"DictionaryCoderProperties"},"Protocols/DictionaryCoderProperties.html#/s:10XMLEncoder25DictionaryCoderPropertiesP3keySSvpZ":{"name":"key","abstract":"<p>Undocumented</p>","parent_name":"DictionaryCoderProperties"},"Protocols/DictionaryCoderProperties.html#/s:10XMLEncoder25DictionaryCoderPropertiesP5valueSSvpZ":{"name":"value","abstract":"<p>Undocumented</p>","parent_name":"DictionaryCoderProperties"},"Protocols/ArrayCoderProperties.html#/s:10XMLEncoder20ArrayCoderPropertiesP6memberSSvpZ":{"name":"member","abstract":"<p>Undocumented</p>","parent_name":"ArrayCoderProperties"},"Protocols/OptionalCodingWrapper.html#/s:10XMLEncoder21OptionalCodingWrapperP11WrappedTypeQa":{"name":"WrappedType","abstract":"<p>Undocumented</p>","parent_name":"OptionalCodingWrapper"},"Protocols/OptionalCodingWrapper.html#/s:10XMLEncoder21OptionalCodingWrapperP12wrappedValue11WrappedTypeQzSgvp":{"name":"wrappedValue","abstract":"<p>Undocumented</p>","parent_name":"OptionalCodingWrapper"},"Protocols/OptionalCodingWrapper.html#/s:10XMLEncoder21OptionalCodingWrapperP12wrappedValuex11WrappedTypeQzSg_tcfc":{"name":"init(wrappedValue:)","abstract":"<p>Undocumented</p>","parent_name":"OptionalCodingWrapper"},"Protocols/CustomCoder.html#/s:10XMLEncoder11CustomCoderP12CodableValueQa":{"name":"CodableValue","abstract":"<p>Undocumented</p>","parent_name":"CustomCoder"},"Protocols/CustomCoder.html#/s:10XMLEncoder11CustomCoderP6encode5value2toy12CodableValueQz_s7Encoder_ptKFZ":{"name":"encode(value:to:)","abstract":"<p>Undocumented</p>","parent_name":"CustomCoder"},"Protocols/CustomCoder.html#/s:10XMLEncoder11CustomCoderP6decode4from12CodableValueQzs7Decoder_p_tKFZ":{"name":"decode(from:)","abstract":"<p>Undocumented</p>","parent_name":"CustomCoder"},"Protocols/CustomCoder.html":{"name":"CustomCoder","abstract":"<p>Protocol for object that will encode and decode a value</p>"},"Protocols/OptionalCodingWrapper.html":{"name":"OptionalCodingWrapper","abstract":"<p>Protocol for a PropertyWrapper to properly handle Coding when the wrappedValue is Optional</p>"},"Protocols/ArrayCoderProperties.html":{"name":"ArrayCoderProperties","abstract":"<p>Protocol for array encoding properties. The only property required is the array element name <code>member</code></p>"},"Protocols/DictionaryCoderProperties.html":{"name":"DictionaryCoderProperties","abstract":"<p>Protocol for dictionary encoding properties. The property required are the dictionary element name <code>entry</code>, the key name <code>key</code> and the value name <code>value</code></p>"},"Extensions/KeyedEncodingContainer.html#/s:s22KeyedEncodingContainerV10XMLEncoderE6encode_6forKeyyqd___xtKSERd__AC21OptionalCodingWrapperRd__lF":{"name":"encode(_:forKey:)","abstract":"<p>Undocumented</p>","parent_name":"KeyedEncodingContainer"},"Extensions/KeyedDecodingContainer.html#/s:s22KeyedDecodingContainerV10XMLEncoderE6decode_6forKeyqd__qd__m_xtKSeRd__AC21OptionalCodingWrapperRd__lF":{"name":"decode(_:forKey:)","abstract":"<p>Undocumented</p>","parent_name":"KeyedDecodingContainer"},"Extensions/KeyedDecodingContainer.html":{"name":"KeyedDecodingContainer","abstract":"<p>extending <code>KeyedDecodingContainer</code> so it will only decode an optional value if it is present</p>"},"Extensions/KeyedEncodingContainer.html":{"name":"KeyedEncodingContainer","abstract":"<p>extending <code>KeyedEncodingContainer</code> so it will only encode a wrapped value it is non nil</p>"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC10attributesSayAC4NodeCGSgvp":{"name":"attributes","abstract":"<p>array of attributes attached to XML ELement</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC10namespacesSayAC4NodeCGSgvp":{"name":"namespaces","abstract":"<p>array of namespaces attached to XML Element</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC4name11stringValueAESS_SSSgtcfc":{"name":"init(name:stringValue:)","abstract":"<p>Initialize XML Element with name and text it contains. The text is stored as a child text node</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC7xmlData7optionsAE10Foundation0E0V_AC7OptionsVtKcfc":{"name":"init(xmlData:options:)","abstract":"<p>Initialise XML Element from XML data</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC9xmlString7optionsAESS_AC7OptionsVtKcfc":{"name":"init(xmlString:options:)","abstract":"<p>Initialise XML Element from string containing XML</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC8elements7forNameSayAEGSS_tF":{"name":"elements(forName:)","abstract":"<p>Return children XML elements with a given name</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC11stringValueSSSgvp":{"name":"stringValue","abstract":"<p>Return child text nodes all concatenated together</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC9attribute7forNameAC4NodeCSgSS_tF":{"name":"attribute(forName:)","abstract":"<p>Return attribute attached to element with a given name</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC12addAttributeyyAC4NodeCF":{"name":"addAttribute(_:)","abstract":"<p>Add an attribute to an element. If one with this name already exists it is replaced</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC13setAttributesyySayAC4NodeCGSgF":{"name":"setAttributes(_:)","abstract":"<p>Set this elements attribute nodes</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC9namespace7forNameAC4NodeCSgSSSg_tF":{"name":"namespace(forName:)","abstract":"<p>Return namespace attached to element with a given name</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC12addNamespaceyyAC4NodeCF":{"name":"addNamespace(_:)","abstract":"<p>Add a namespace to an element. If one with this name already exists it is replaced</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC13setNamespacesyySayAC4NodeCGSgF":{"name":"setNamespaces(_:)","abstract":"<p>Set this elements namespace nodes</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC9xmlString7optionsSSAC7OptionsV_tF":{"name":"xmlString(options:)","abstract":"<p>Return formatted XML as a String</p>","parent_name":"Element"},"Enums/XML/Element.html#/s:10XMLEncoder3XMLO7ElementC9attribute3forAC4NodeCSgs9CodingKey_p_tF":{"name":"attribute(for:)","abstract":"<p>Undocumented</p>","parent_name":"Element"},"Enums/XML/Document.html#/s:10XMLEncoder3XMLO8DocumentC7versionSSSgvp":{"name":"version","abstract":"<p>XML version. If not set defaults to 1.0</p>","parent_name":"Document"},"Enums/XML/Document.html#/s:10XMLEncoder3XMLO8DocumentC17characterEncodingSSSgvp":{"name":"characterEncoding","abstract":"<p>XML character encoding. If not set defaults to UTF-8</p>","parent_name":"Document"},"Enums/XML/Document.html#/s:10XMLEncoder3XMLO8DocumentCAEycfc":{"name":"init()","abstract":"<p>Initialize an XML Document</p>","parent_name":"Document"},"Enums/XML/Document.html#/s:10XMLEncoder3XMLO8DocumentC11rootElementAeC0E0C_tcfc":{"name":"init(rootElement:)","abstract":"<p>Initialise with a single root element</p>","parent_name":"Document"},"Enums/XML/Document.html#/s:10XMLEncoder3XMLO8DocumentC4data7optionsAE10Foundation4DataV_AC7OptionsVtKcfc":{"name":"init(data:options:)","abstract":"<p>Initialise with a block of XML data</p>","parent_name":"Document"},"Enums/XML/Document.html#/s:10XMLEncoder3XMLO8DocumentC9xmlString7optionsAESS_AC7OptionsVtKcfc":{"name":"init(xmlString:options:)","abstract":"<p>Initialise with a string containing XML data</p>","parent_name":"Document"},"Enums/XML/Document.html#/s:10XMLEncoder3XMLO8DocumentC14setRootElementyyAC0F0CF":{"name":"setRootElement(_:)","abstract":"<p>Set the root element of the document</p>","parent_name":"Document"},"Enums/XML/Document.html#/s:10XMLEncoder3XMLO8DocumentC11rootElementAC0E0CSgyF":{"name":"rootElement()","abstract":"<p>Return the root element</p>","parent_name":"Document"},"Enums/XML/Document.html#/s:10XMLEncoder3XMLO8DocumentC9xmlString7optionsSSAC7OptionsV_tF":{"name":"xmlString(options:)","abstract":"<p>Output formatted XML as a String</p>","parent_name":"Document"},"Enums/XML/Document.html#/s:10XMLEncoder3XMLO8DocumentC7xmlData10Foundation0E0Vvp":{"name":"xmlData","abstract":"<p>Output formatted XML as Data</p>","parent_name":"Document"},"Enums/XML/Document.html#/s:10XMLEncoder3XMLO8DocumentC7xmlData7options10Foundation0E0VAC7OptionsV_tF":{"name":"xmlData(options:)","abstract":"<p>Output formatted XML as Data</p>","parent_name":"Document"},"Enums/XML/ContainerNode.html#/s:10XMLEncoder3XMLO13ContainerNodeC8addChildyyAC0D0CF":{"name":"addChild(_:)","abstract":"<p>Add a child node to the XML element</p>","parent_name":"ContainerNode"},"Enums/XML/ContainerNode.html#/s:10XMLEncoder3XMLO13ContainerNodeC11insertChild4node2atyAC0D0C_SitF":{"name":"insertChild(node:at:)","abstract":"<p>Insert a child node at position in the list of children nodes</p>","parent_name":"ContainerNode"},"Enums/XML/ContainerNode.html#/s:10XMLEncoder3XMLO13ContainerNodeC11setChildrenyySayAC0D0CGSgF":{"name":"setChildren(_:)","abstract":"<p>Set this elements children nodes</p>","parent_name":"ContainerNode"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC4nameSSSgvp":{"name":"name","abstract":"<p>Name of XML node</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC11stringValueSSSgvp":{"name":"stringValue","abstract":"<p>String value associated with XMLNode</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC4kindAC4KindOvp":{"name":"kind","abstract":"<p>Defines the type of XML node</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC8childrenSayAEGSgvp":{"name":"children","abstract":"<p>Children XML Nodes attached to this XML Node</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC6parentAESgvp":{"name":"parent","abstract":"<p>The parent XML Node (could be the XML Element or XML Document that owns this node)</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC8documentAEyFZ":{"name":"document()","abstract":"<p>Create XML document node</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC7element8withName11stringValueAESS_SSSgtFZ":{"name":"element(withName:stringValue:)","abstract":"<p>Create XML element node</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC4text11stringValueAESS_tFZ":{"name":"text(stringValue:)","abstract":"<p>Create raw text node</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC9attribute8withName11stringValueAESS_SStFZ":{"name":"attribute(withName:stringValue:)","abstract":"<p>Create XML attribute node</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC9namespace8withName11stringValueAESSSg_SStFZ":{"name":"namespace(withName:stringValue:)","abstract":"<p>Create XML namespace node</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC7comment11stringValueAESS_tFZ":{"name":"comment(stringValue:)","abstract":"<p>Create XML comment node</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC10childCountSivp":{"name":"childCount","abstract":"<p>Return number of children nodes</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC6detachyyF":{"name":"detach()","abstract":"<p>Detach XML node from its parent</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC8children2ofSayAEGSgAC4KindO_tF":{"name":"children(of:)","abstract":"<p>Return children XML Nodes of a specific kind</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC9xmlStringSSvp":{"name":"xmlString","abstract":"<p>Output formatted XML as a String</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC9xmlString7optionsSSAC7OptionsV_tF":{"name":"xmlString(options:)","abstract":"<p>Output formatted XML as a String with the supplied OptionSet</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC11descriptionSSvp":{"name":"description","abstract":"<p>CustomStringConvertible protocol</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>CustomDebugStringConvertible protocol</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC5child3forAESgSS_tF":{"name":"child(for:)","abstract":"<p>Undocumented</p>","parent_name":"Node"},"Enums/XML/Node.html#/s:10XMLEncoder3XMLO4NodeC5child3forAESgs9CodingKey_p_tF":{"name":"child(for:)","abstract":"<p>Undocumented</p>","parent_name":"Node"},"Enums/XML/Options.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Options"},"Enums/XML/Options.html#/s:10XMLEncoder3XMLO7OptionsV23nodeCompactEmptyElementAEvpZ":{"name":"nodeCompactEmptyElement","abstract":"<p>if an XML Element has no children then output as <code>&lt;element /&gt;</code>. Default is to output <code>&lt;element&gt;&lt;/element&gt;</code></p>","parent_name":"Options"},"Enums/XML/Options.html#/s:10XMLEncoder3XMLO7OptionsV15nodePrettyPrintAEvpZ":{"name":"nodePrettyPrint","abstract":"<p>output XML as human readable</p>","parent_name":"Options"},"Enums/XML/Options.html#/s:10XMLEncoder3XMLO7OptionsV11nodeIsCDATAAEvpZ":{"name":"nodeIsCDATA","abstract":"<p>flag that XML Node should be output as CDATA</p>","parent_name":"Options"},"Enums/XML/Options.html#/s:10XMLEncoder3XMLO7OptionsV22nodePreserveWhitespaceAEvpZ":{"name":"nodePreserveWhitespace","abstract":"<p>when parsing XML preserve the whitespace sections</p>","parent_name":"Options"},"Enums/XML/Options.html#/s:10XMLEncoder3XMLO7OptionsV17nodePreserveCDATAAEvpZ":{"name":"nodePreserveCDATA","abstract":"<p>when parsing XML preserve the CDATA text elements</p>","parent_name":"Options"},"Enums/XML/Options.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Options"},"Enums/XML/Kind.html#/s:10XMLEncoder3XMLO4KindO8documentyA2EmF":{"name":"document","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Enums/XML/Kind.html#/s:10XMLEncoder3XMLO4KindO7elementyA2EmF":{"name":"element","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Enums/XML/Kind.html#/s:10XMLEncoder3XMLO4KindO4textyA2EmF":{"name":"text","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Enums/XML/Kind.html#/s:10XMLEncoder3XMLO4KindO9attributeyA2EmF":{"name":"attribute","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Enums/XML/Kind.html#/s:10XMLEncoder3XMLO4KindO9namespaceyA2EmF":{"name":"namespace","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Enums/XML/Kind.html#/s:10XMLEncoder3XMLO4KindO7commentyA2EmF":{"name":"comment","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Enums/XML/Kind.html":{"name":"Kind","abstract":"<p>XML node type</p>","parent_name":"XML"},"Enums/XML/Options.html":{"name":"Options","abstract":"<p>Options for parsing and outputting XML Data</p>","parent_name":"XML"},"Enums/XML/Node.html":{"name":"Node","abstract":"<p>Base class for all types of XML.Node</p>","parent_name":"XML"},"Enums/XML/ContainerNode.html":{"name":"ContainerNode","abstract":"<p>XML Node that has XML Children nodes</p>","parent_name":"XML"},"Enums/XML/Document.html":{"name":"Document","abstract":"<p>XML Document class</p>","parent_name":"XML"},"Enums/XML/Element.html":{"name":"Element","abstract":"<p>XML Element class</p>","parent_name":"XML"},"Enums/XML.html":{"name":"XML","abstract":"<p>Holding class for all the XML objects.</p>"},"Classes/XMLEncoder/NonConformingFloatEncodingStrategy.html#/s:10XMLEncoderAAC34NonConformingFloatEncodingStrategyO5throwyA2DmF":{"name":"throw","abstract":"<p>Throw upon encountering non-conforming values. This is the default strategy.</p>","parent_name":"NonConformingFloatEncodingStrategy"},"Classes/XMLEncoder/NonConformingFloatEncodingStrategy.html#/s:10XMLEncoderAAC34NonConformingFloatEncodingStrategyO15convertToStringyADSS_S2StcADmF":{"name":"convertToString(positiveInfinity:negativeInfinity:nan:)","abstract":"<p>Encode the values using the given representation strings.</p>","parent_name":"NonConformingFloatEncodingStrategy"},"Classes/XMLEncoder/DataEncodingStrategy.html#/s:10XMLEncoderAAC20DataEncodingStrategyO010deferredToB0yA2DmF":{"name":"deferredToData","abstract":"<p>Defer to <code>Data</code> for choosing an encoding.</p>","parent_name":"DataEncodingStrategy"},"Classes/XMLEncoder/DataEncodingStrategy.html#/s:10XMLEncoderAAC20DataEncodingStrategyO6base64yA2DmF":{"name":"base64","abstract":"<p>Encoded the <code>Data</code> as a Base64-encoded string. This is the default strategy.</p>","parent_name":"DataEncodingStrategy"},"Classes/XMLEncoder/DataEncodingStrategy.html#/s:10XMLEncoderAAC20DataEncodingStrategyO6customyAdA3XMLO7ElementC10Foundation0B0V_s7Encoder_ptKccADmF":{"name":"custom(_:)","abstract":"<p>Encode the <code>Data</code> as a custom value encoded by the given closure.</p>","parent_name":"DataEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:10XMLEncoderAAC20DateEncodingStrategyO010deferredToB0yA2DmF":{"name":"deferredToDate","abstract":"<p>Defer to <code>Date</code> for choosing an encoding. This is the default strategy.</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:10XMLEncoderAAC20DateEncodingStrategyO16secondsSince1970yA2DmF":{"name":"secondsSince1970","abstract":"<p>Encode the <code>Date</code> as a UNIX timestamp (as a JSON number).</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:10XMLEncoderAAC20DateEncodingStrategyO21millisecondsSince1970yA2DmF":{"name":"millisecondsSince1970","abstract":"<p>Encode the <code>Date</code> as UNIX millisecond timestamp (as a JSON number).</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:10XMLEncoderAAC20DateEncodingStrategyO7iso8601yA2DmF":{"name":"iso8601","abstract":"<p>Encode the <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:10XMLEncoderAAC20DateEncodingStrategyO9formattedyADSo15NSDateFormatterCcADmF":{"name":"formatted(_:)","abstract":"<p>Encode the <code>Date</code> as a string formatted by the given formatter.</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:10XMLEncoderAAC20DateEncodingStrategyO6customyAdA3XMLO7ElementC10Foundation0B0V_s7Encoder_ptKccADmF":{"name":"custom(_:)","abstract":"<p>Encode the <code>Date</code> as a custom value encoded by the given closure.</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html":{"name":"DateEncodingStrategy","abstract":"<p>The strategy to use for encoding <code>Date</code> values.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder/DataEncodingStrategy.html":{"name":"DataEncodingStrategy","abstract":"<p>The strategy to use for encoding <code>Data</code> values.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder/NonConformingFloatEncodingStrategy.html":{"name":"NonConformingFloatEncodingStrategy","abstract":"<p>The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:10XMLEncoderAAC20dateEncodingStrategyAB04DatecD0Ovp":{"name":"dateEncodingStrategy","abstract":"<p>The strategy to use in encoding dates. Defaults to <code>.deferredToDate</code>.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:10XMLEncoderAAC20dataEncodingStrategyAB04DatacD0Ovp":{"name":"dataEncodingStrategy","abstract":"<p>The strategy to use in encoding binary data. Defaults to <code>.base64</code>.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:10XMLEncoderAAC34nonConformingFloatEncodingStrategyAB03NoncdeF0Ovp":{"name":"nonConformingFloatEncodingStrategy","abstract":"<p>The strategy to use in encoding non-conforming numbers. Defaults to <code>.throw</code>.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:10XMLEncoderAAC8userInfoSDys010CodingUserC3KeyVypGvp":{"name":"userInfo","abstract":"<p>Contextual user-provided information for use during encoding.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:10XMLEncoderAACABycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:10XMLEncoderAAC6encode_4nameAA3XMLO7ElementCx_SSSgtKSERzlF":{"name":"encode(_:name:)","abstract":"<p>Undocumented</p>","parent_name":"XMLEncoder"},"Classes/XMLDecoder/NonConformingFloatDecodingStrategy.html#/s:10XMLEncoder10XMLDecoderC34NonConformingFloatDecodingStrategyO5throwyA2EmF":{"name":"throw","abstract":"<p>Throw upon encountering non-conforming values. This is the default strategy.</p>","parent_name":"NonConformingFloatDecodingStrategy"},"Classes/XMLDecoder/NonConformingFloatDecodingStrategy.html#/s:10XMLEncoder10XMLDecoderC34NonConformingFloatDecodingStrategyO17convertFromStringyAESS_S2StcAEmF":{"name":"convertFromString(positiveInfinity:negativeInfinity:nan:)","abstract":"<p>Decode the values from the given representation strings.</p>","parent_name":"NonConformingFloatDecodingStrategy"},"Classes/XMLDecoder/DataDecodingStrategy.html#/s:10XMLEncoder10XMLDecoderC20DataDecodingStrategyO010deferredToC0yA2EmF":{"name":"deferredToData","abstract":"<p>Defer to <code>Data</code> for decoding.</p>","parent_name":"DataDecodingStrategy"},"Classes/XMLDecoder/DataDecodingStrategy.html#/s:10XMLEncoder10XMLDecoderC20DataDecodingStrategyO6base64yA2EmF":{"name":"base64","abstract":"<p>Decode the <code>Data</code> from a Base64-encoded string.</p>","parent_name":"DataDecodingStrategy"},"Classes/XMLDecoder/DataDecodingStrategy.html#/s:10XMLEncoder10XMLDecoderC20DataDecodingStrategyO6customyAE10Foundation0C0Vs7Decoder_pKccAEmF":{"name":"custom(_:)","abstract":"<p>Decode the <code>Data</code> as a custom value decoded by the given closure.</p>","parent_name":"DataDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:10XMLEncoder10XMLDecoderC20DateDecodingStrategyO010deferredToC0yA2EmF":{"name":"deferredToDate","abstract":"<p>Defer to <code>Date</code> for decoding. This is the default strategy.</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:10XMLEncoder10XMLDecoderC20DateDecodingStrategyO16secondsSince1970yA2EmF":{"name":"secondsSince1970","abstract":"<p>Decode the <code>Date</code> as a UNIX timestamp from a JSON number.</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:10XMLEncoder10XMLDecoderC20DateDecodingStrategyO21millisecondsSince1970yA2EmF":{"name":"millisecondsSince1970","abstract":"<p>Decode the <code>Date</code> as UNIX millisecond timestamp from a JSON number.</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:10XMLEncoder10XMLDecoderC20DateDecodingStrategyO7iso8601yA2EmF":{"name":"iso8601","abstract":"<p>Decode the <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:10XMLEncoder10XMLDecoderC20DateDecodingStrategyO9formattedyAESo15NSDateFormatterCcAEmF":{"name":"formatted(_:)","abstract":"<p>Decode the <code>Date</code> as a string parsed by the given formatter.</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:10XMLEncoder10XMLDecoderC20DateDecodingStrategyO6customyAE10Foundation0C0Vs7Decoder_pKccAEmF":{"name":"custom(_:)","abstract":"<p>Decode the <code>Date</code> as a custom value decoded by the given closure.</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html":{"name":"DateDecodingStrategy","abstract":"<p>The strategy to use for decoding <code>Date</code> values.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder/DataDecodingStrategy.html":{"name":"DataDecodingStrategy","abstract":"<p>The strategy to use for decoding <code>Data</code> values.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder/NonConformingFloatDecodingStrategy.html":{"name":"NonConformingFloatDecodingStrategy","abstract":"<p>The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:10XMLEncoder10XMLDecoderC20dateDecodingStrategyAC04DatedE0Ovp":{"name":"dateDecodingStrategy","abstract":"<p>The strategy to use in decoding dates. Defaults to <code>.deferredToDate</code>.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:10XMLEncoder10XMLDecoderC20dataDecodingStrategyAC04DatadE0Ovp":{"name":"dataDecodingStrategy","abstract":"<p>The strategy to use in decoding binary data. Defaults to <code>.raw</code>.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:10XMLEncoder10XMLDecoderC34nonConformingFloatDecodingStrategyAC03NondefG0Ovp":{"name":"nonConformingFloatDecodingStrategy","abstract":"<p>The strategy to use in decoding non-conforming numbers. Defaults to <code>.throw</code>.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:10XMLEncoder10XMLDecoderC8userInfoSDys010CodingUserD3KeyVypGvp":{"name":"userInfo","abstract":"<p>Contextual user-provided information for use during decoding.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:10XMLEncoder10XMLDecoderCACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:10XMLEncoder10XMLDecoderC6decode_4fromxxm_AA3XMLO4NodeCtKSeRzlF":{"name":"decode(_:from:)","abstract":"<p>decode a Codable class from XML</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html":{"name":"XMLDecoder","abstract":"<p>The wrapper class for decoding Codable classes from XMLNodes</p>"},"Classes/XMLEncoder.html":{"name":"XMLEncoder","abstract":"<p>The wrapper class for encoding Codable classes to XMLElements</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Extensions.html":{"name":"Extensions","abstract":"<p>The following extensions are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"},"Structs.html":{"name":"Structures","abstract":"<p>The following structures are available globally.</p>"},"Typealiases.html":{"name":"Type Aliases","abstract":"<p>The following type aliases are available globally.</p>"}}