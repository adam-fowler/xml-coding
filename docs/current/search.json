{"Protocols/XMLCodable.html#/s:11xml_encoder10XMLCodableP21getXMLContainerCoding3forAA0eF0OSgs0F3Key_p_tFZ":{"name":"getXMLContainerCoding(for:)","abstract":"<p>Return how element with key is encoded</p>","parent_name":"XMLCodable"},"Protocols/XMLCodable.html":{"name":"XMLCodable","abstract":"<p>Protocol used to control how elements of a class are encoded in XML, specifically the container elements. There are multiple ways to encode arrays and dictionaries. A class can adopt this protocol and through the <code>getXMLContainerCoding</code> function can control how its elements are encoded.</p>"},"Enums/XMLContainerCoding.html#/s:11xml_encoder18XMLContainerCodingO7defaultyA2CmF":{"name":"default","abstract":"<p>Default case, flat arrays and coding dictionaries like all other codable structures</p>","parent_name":"XMLContainerCoding"},"Enums/XMLContainerCoding.html#/s:11xml_encoder18XMLContainerCodingO5arrayyACSSSg_tcACmF":{"name":"array(entry:)","abstract":"<p>Case for coding arrays. where there is an enclosing xml element and each array element has name is defined by element. eg <code>&lt;array&gt;&lt;member&gt;1&lt;/member&gt;&lt;member&gt;2&lt;/member&gt;&lt;/array&gt;</code></p>","parent_name":"XMLContainerCoding"},"Enums/XMLContainerCoding.html#/s:11xml_encoder18XMLContainerCodingO9structureyA2CmF":{"name":"structure","abstract":"<p>Case for coding dictionaries where key element contains the value. Encoding like a struct or class where the keys are the variable names. This is only valid for dictionaries that have keys of type <code>String</code> eg <code>&lt;dict&gt;&lt;key&gt;value&lt;/key&gt;&lt;key2&gt;value2&lt;/key2&gt;&lt;/dict&gt;</code></p>","parent_name":"XMLContainerCoding"},"Enums/XMLContainerCoding.html#/s:11xml_encoder18XMLContainerCodingO10dictionaryyACSSSg_S2StcACmF":{"name":"dictionary(entry:key:value:)","abstract":"<p>Case for coding dictionaries where key and value are stored in separate elements and these can be either stored as children of the dictionary element or as children of a enclosing entry element which is then stored under the dictionary element eg <code>&lt;dict&gt;&lt;entry&gt;&lt;key&gt;name&lt;/key&gt;&lt;value&gt;John Smith&lt;/value&gt;&lt;/entry&gt;&lt;entry&gt;...&lt;/entry&gt;...&lt;/dict&gt;</code></p>","parent_name":"XMLContainerCoding"},"Enums/XMLContainerCoding.html":{"name":"XMLContainerCoding","abstract":"<p>Rules for encoding/decoding containers like arrays and dictionaries.</p>"},"Classes/XMLEncoder/NonConformingFloatEncodingStrategy.html#/s:11xml_encoder10XMLEncoderC34NonConformingFloatEncodingStrategyO5throwyA2EmF":{"name":"throw","abstract":"<p>Throw upon encountering non-conforming values. This is the default strategy.</p>","parent_name":"NonConformingFloatEncodingStrategy"},"Classes/XMLEncoder/NonConformingFloatEncodingStrategy.html#/s:11xml_encoder10XMLEncoderC34NonConformingFloatEncodingStrategyO15convertToStringyAESS_S2StcAEmF":{"name":"convertToString(positiveInfinity:negativeInfinity:nan:)","abstract":"<p>Encode the values using the given representation strings.</p>","parent_name":"NonConformingFloatEncodingStrategy"},"Classes/XMLEncoder/DataEncodingStrategy.html#/s:11xml_encoder10XMLEncoderC20DataEncodingStrategyO010deferredToD0yA2EmF":{"name":"deferredToData","abstract":"<p>Defer to <code>Data</code> for choosing an encoding.</p>","parent_name":"DataEncodingStrategy"},"Classes/XMLEncoder/DataEncodingStrategy.html#/s:11xml_encoder10XMLEncoderC20DataEncodingStrategyO6base64yA2EmF":{"name":"base64","abstract":"<p>Encoded the <code>Data</code> as a Base64-encoded string. This is the default strategy.</p>","parent_name":"DataEncodingStrategy"},"Classes/XMLEncoder/DataEncodingStrategy.html#/s:11xml_encoder10XMLEncoderC20DataEncodingStrategyO6customyAEy10Foundation0D0V_s7Encoder_ptKccAEmF":{"name":"custom(_:)","abstract":"<p>Encode the <code>Data</code> as a custom value encoded by the given closure.</p>","parent_name":"DataEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:11xml_encoder10XMLEncoderC20DateEncodingStrategyO010deferredToD0yA2EmF":{"name":"deferredToDate","abstract":"<p>Defer to <code>Date</code> for choosing an encoding. This is the default strategy.</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:11xml_encoder10XMLEncoderC20DateEncodingStrategyO16secondsSince1970yA2EmF":{"name":"secondsSince1970","abstract":"<p>Encode the <code>Date</code> as a UNIX timestamp (as a JSON number).</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:11xml_encoder10XMLEncoderC20DateEncodingStrategyO21millisecondsSince1970yA2EmF":{"name":"millisecondsSince1970","abstract":"<p>Encode the <code>Date</code> as UNIX millisecond timestamp (as a JSON number).</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:11xml_encoder10XMLEncoderC20DateEncodingStrategyO7iso8601yA2EmF":{"name":"iso8601","abstract":"<p>Encode the <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:11xml_encoder10XMLEncoderC20DateEncodingStrategyO9formattedyAESo15NSDateFormatterCcAEmF":{"name":"formatted(_:)","abstract":"<p>Encode the <code>Date</code> as a string formatted by the given formatter.</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html#/s:11xml_encoder10XMLEncoderC20DateEncodingStrategyO6customyAEy10Foundation0D0V_s7Encoder_ptKccAEmF":{"name":"custom(_:)","abstract":"<p>Encode the <code>Date</code> as a custom value encoded by the given closure.</p>","parent_name":"DateEncodingStrategy"},"Classes/XMLEncoder/DateEncodingStrategy.html":{"name":"DateEncodingStrategy","abstract":"<p>The strategy to use for encoding <code>Date</code> values.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder/DataEncodingStrategy.html":{"name":"DataEncodingStrategy","abstract":"<p>The strategy to use for encoding <code>Data</code> values.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder/NonConformingFloatEncodingStrategy.html":{"name":"NonConformingFloatEncodingStrategy","abstract":"<p>The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:11xml_encoder10XMLEncoderC20dateEncodingStrategyAC04DateeF0Ovp":{"name":"dateEncodingStrategy","abstract":"<p>The strategy to use in encoding dates. Defaults to <code>.deferredToDate</code>.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:11xml_encoder10XMLEncoderC20dataEncodingStrategyAC04DataeF0Ovp":{"name":"dataEncodingStrategy","abstract":"<p>The strategy to use in encoding binary data. Defaults to <code>.base64</code>.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:11xml_encoder10XMLEncoderC34nonConformingFloatEncodingStrategyAC03NonefgH0Ovp":{"name":"nonConformingFloatEncodingStrategy","abstract":"<p>The strategy to use in encoding non-conforming numbers. Defaults to <code>.throw</code>.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:11xml_encoder10XMLEncoderC21arrayEncodingStrategyAA18XMLContainerCodingOvp":{"name":"arrayEncodingStrategy","abstract":"<p>The strategy to use for encoding Arrays</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:11xml_encoder10XMLEncoderC26dictionaryEncodingStrategyAA18XMLContainerCodingOvp":{"name":"dictionaryEncodingStrategy","abstract":"<p>The strategy to use for encoding Dictionaries</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:11xml_encoder10XMLEncoderC8userInfoSDys010CodingUserE3KeyVypGvp":{"name":"userInfo","abstract":"<p>Contextual user-provided information for use during encoding.</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:11xml_encoder10XMLEncoderCACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"XMLEncoder"},"Classes/XMLEncoder.html#/s:11xml_encoder10XMLEncoderC6encode_4nameAA3XMLC7ElementCx_SSSgtKSERzlF":{"name":"encode(_:name:)","abstract":"<p>Undocumented</p>","parent_name":"XMLEncoder"},"Classes/XMLDecoder/NonConformingFloatDecodingStrategy.html#/s:11xml_encoder10XMLDecoderC34NonConformingFloatDecodingStrategyO5throwyA2EmF":{"name":"throw","abstract":"<p>Throw upon encountering non-conforming values. This is the default strategy.</p>","parent_name":"NonConformingFloatDecodingStrategy"},"Classes/XMLDecoder/NonConformingFloatDecodingStrategy.html#/s:11xml_encoder10XMLDecoderC34NonConformingFloatDecodingStrategyO17convertFromStringyAESS_S2StcAEmF":{"name":"convertFromString(positiveInfinity:negativeInfinity:nan:)","abstract":"<p>Decode the values from the given representation strings.</p>","parent_name":"NonConformingFloatDecodingStrategy"},"Classes/XMLDecoder/DataDecodingStrategy.html#/s:11xml_encoder10XMLDecoderC20DataDecodingStrategyO010deferredToD0yA2EmF":{"name":"deferredToData","abstract":"<p>Defer to <code>Data</code> for decoding.</p>","parent_name":"DataDecodingStrategy"},"Classes/XMLDecoder/DataDecodingStrategy.html#/s:11xml_encoder10XMLDecoderC20DataDecodingStrategyO6base64yA2EmF":{"name":"base64","abstract":"<p>Decode the <code>Data</code> from a Base64-encoded string.</p>","parent_name":"DataDecodingStrategy"},"Classes/XMLDecoder/DataDecodingStrategy.html#/s:11xml_encoder10XMLDecoderC20DataDecodingStrategyO6customyAE10Foundation0D0Vs7Decoder_pKccAEmF":{"name":"custom(_:)","abstract":"<p>Decode the <code>Data</code> as a custom value decoded by the given closure.</p>","parent_name":"DataDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:11xml_encoder10XMLDecoderC20DateDecodingStrategyO010deferredToD0yA2EmF":{"name":"deferredToDate","abstract":"<p>Defer to <code>Date</code> for decoding. This is the default strategy.</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:11xml_encoder10XMLDecoderC20DateDecodingStrategyO16secondsSince1970yA2EmF":{"name":"secondsSince1970","abstract":"<p>Decode the <code>Date</code> as a UNIX timestamp from a JSON number.</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:11xml_encoder10XMLDecoderC20DateDecodingStrategyO21millisecondsSince1970yA2EmF":{"name":"millisecondsSince1970","abstract":"<p>Decode the <code>Date</code> as UNIX millisecond timestamp from a JSON number.</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:11xml_encoder10XMLDecoderC20DateDecodingStrategyO7iso8601yA2EmF":{"name":"iso8601","abstract":"<p>Decode the <code>Date</code> as an ISO-8601-formatted string (in RFC 3339 format).</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:11xml_encoder10XMLDecoderC20DateDecodingStrategyO9formattedyAESo15NSDateFormatterCcAEmF":{"name":"formatted(_:)","abstract":"<p>Decode the <code>Date</code> as a string parsed by the given formatter.</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html#/s:11xml_encoder10XMLDecoderC20DateDecodingStrategyO6customyAE10Foundation0D0Vs7Decoder_pKccAEmF":{"name":"custom(_:)","abstract":"<p>Decode the <code>Date</code> as a custom value decoded by the given closure.</p>","parent_name":"DateDecodingStrategy"},"Classes/XMLDecoder/DateDecodingStrategy.html":{"name":"DateDecodingStrategy","abstract":"<p>The strategy to use for decoding <code>Date</code> values.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder/DataDecodingStrategy.html":{"name":"DataDecodingStrategy","abstract":"<p>The strategy to use for decoding <code>Data</code> values.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder/NonConformingFloatDecodingStrategy.html":{"name":"NonConformingFloatDecodingStrategy","abstract":"<p>The strategy to use for non-JSON-conforming floating-point values (IEEE 754 infinity and NaN).</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:11xml_encoder10XMLDecoderC20dateDecodingStrategyAC04DateeF0Ovp":{"name":"dateDecodingStrategy","abstract":"<p>The strategy to use in decoding dates. Defaults to <code>.deferredToDate</code>.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:11xml_encoder10XMLDecoderC20dataDecodingStrategyAC04DataeF0Ovp":{"name":"dataDecodingStrategy","abstract":"<p>The strategy to use in decoding binary data. Defaults to <code>.raw</code>.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:11xml_encoder10XMLDecoderC34nonConformingFloatDecodingStrategyAC03NonefgH0Ovp":{"name":"nonConformingFloatDecodingStrategy","abstract":"<p>The strategy to use in decoding non-conforming numbers. Defaults to <code>.throw</code>.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:11xml_encoder10XMLDecoderC21arrayDecodingStrategyAA18XMLContainerCodingOvp":{"name":"arrayDecodingStrategy","abstract":"<p>The strategy to use for encoding Arrays</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:11xml_encoder10XMLDecoderC26dictionaryDecodingStrategyAA18XMLContainerCodingOvp":{"name":"dictionaryDecodingStrategy","abstract":"<p>The strategy to use for encoding Dictionaries</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:11xml_encoder10XMLDecoderC8userInfoSDys010CodingUserE3KeyVypGvp":{"name":"userInfo","abstract":"<p>Contextual user-provided information for use during decoding.</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:11xml_encoder10XMLDecoderCACycfc":{"name":"init()","abstract":"<p>Undocumented</p>","parent_name":"XMLDecoder"},"Classes/XMLDecoder.html#/s:11xml_encoder10XMLDecoderC6decode_4fromxxm_AA3XMLC7ElementCtKSeRzlF":{"name":"decode(_:from:)","abstract":"<p>decode a Codable class from XML</p>","parent_name":"XMLDecoder"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC10attributesSayAC4NodeCGSgvp":{"name":"attributes","abstract":"<p>array of attributes attached to XML ELement</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC10namespacesSayAC4NodeCGSgvp":{"name":"namespaces","abstract":"<p>array of namespaces attached to XML Element</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC4name11stringValueAESS_SSSgtcfc":{"name":"init(name:stringValue:)","abstract":"<p>Initialize XML Element with name and text it contains. The text is stored as a child text node</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC0A4Data7optionsAE10Foundation0E0V_AC7OptionsVtKcfc":{"name":"init(xmlData:options:)","abstract":"<p>Initialise XML Element from XML data</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC0A6String7optionsAESS_AC7OptionsVtKcfc":{"name":"init(xmlString:options:)","abstract":"<p>Initialise XML Element from string containing XML</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC8elements7forNameSayAEGSS_tF":{"name":"elements(forName:)","abstract":"<p>Return children XML elements with a given name</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC11stringValueSSSgvp":{"name":"stringValue","abstract":"<p>Return child text nodes all concatenated together</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC9attribute7forNameAC4NodeCSgSS_tF":{"name":"attribute(forName:)","abstract":"<p>Return attribute attached to element with a given name</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC12addAttributeyyAC4NodeCF":{"name":"addAttribute(_:)","abstract":"<p>Add an attribute to an element. If one with this name already exists it is replaced</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC13setAttributesyySayAC4NodeCGSgF":{"name":"setAttributes(_:)","abstract":"<p>Set this elements attribute nodes</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC9namespace7forNameAC4NodeCSgSSSg_tF":{"name":"namespace(forName:)","abstract":"<p>Return namespace attached to element with a given name</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC12addNamespaceyyAC4NodeCF":{"name":"addNamespace(_:)","abstract":"<p>Add a namespace to an element. If one with this name already exists it is replaced</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC13setNamespacesyySayAC4NodeCGSgF":{"name":"setNamespaces(_:)","abstract":"<p>Set this elements namespace nodes</p>","parent_name":"Element"},"Classes/XML/Element.html#/s:11xml_encoder3XMLC7ElementC0A6String7optionsSSAC7OptionsV_tF":{"name":"xmlString(options:)","abstract":"<p>Return formatted XML as a String</p>","parent_name":"Element"},"Classes/XML/Document.html#/s:11xml_encoder3XMLC8DocumentC7versionSSSgvp":{"name":"version","abstract":"<p>XML version. If not set defaults to 1.0</p>","parent_name":"Document"},"Classes/XML/Document.html#/s:11xml_encoder3XMLC8DocumentC17characterEncodingSSSgvp":{"name":"characterEncoding","abstract":"<p>XML character encoding. If not set defaults to UTF-8</p>","parent_name":"Document"},"Classes/XML/Document.html#/s:11xml_encoder3XMLC8DocumentCAEycfc":{"name":"init()","abstract":"<p>Initialize an XML Document</p>","parent_name":"Document"},"Classes/XML/Document.html#/s:11xml_encoder3XMLC8DocumentC11rootElementAeC0F0C_tcfc":{"name":"init(rootElement:)","abstract":"<p>Initialise with a single root element</p>","parent_name":"Document"},"Classes/XML/Document.html#/s:11xml_encoder3XMLC8DocumentC4data7optionsAE10Foundation4DataV_AC7OptionsVtKcfc":{"name":"init(data:options:)","abstract":"<p>Initialise with a block of XML data</p>","parent_name":"Document"},"Classes/XML/Document.html#/s:11xml_encoder3XMLC8DocumentC0A6String7optionsAESS_AC7OptionsVtKcfc":{"name":"init(xmlString:options:)","abstract":"<p>Initialise with a string containing XML data</p>","parent_name":"Document"},"Classes/XML/Document.html#/s:11xml_encoder3XMLC8DocumentC14setRootElementyyAC0G0CF":{"name":"setRootElement(_:)","abstract":"<p>Set the root element of the document</p>","parent_name":"Document"},"Classes/XML/Document.html#/s:11xml_encoder3XMLC8DocumentC11rootElementAC0F0CSgyF":{"name":"rootElement()","abstract":"<p>Return the root element</p>","parent_name":"Document"},"Classes/XML/Document.html#/s:11xml_encoder3XMLC8DocumentC0A6String7optionsSSAC7OptionsV_tF":{"name":"xmlString(options:)","abstract":"<p>Output formatted XML as a String</p>","parent_name":"Document"},"Classes/XML/Document.html#/s:11xml_encoder3XMLC8DocumentC0A4Data10Foundation0E0Vvp":{"name":"xmlData","abstract":"<p>Output formatted XML as Data</p>","parent_name":"Document"},"Classes/XML/Document.html#/s:11xml_encoder3XMLC8DocumentC0A4Data7options10Foundation0E0VAC7OptionsV_tF":{"name":"xmlData(options:)","abstract":"<p>Output formatted XML as Data</p>","parent_name":"Document"},"Classes/XML/ContainerNode.html#/s:11xml_encoder3XMLC13ContainerNodeC8addChildyyAC0E0CF":{"name":"addChild(_:)","abstract":"<p>Add a child node to the XML element</p>","parent_name":"ContainerNode"},"Classes/XML/ContainerNode.html#/s:11xml_encoder3XMLC13ContainerNodeC11insertChild4node2atyAC0E0C_SitF":{"name":"insertChild(node:at:)","abstract":"<p>Insert a child node at position in the list of children nodes</p>","parent_name":"ContainerNode"},"Classes/XML/ContainerNode.html#/s:11xml_encoder3XMLC13ContainerNodeC11setChildrenyySayAC0E0CGSgF":{"name":"setChildren(_:)","abstract":"<p>Set this elements children nodes</p>","parent_name":"ContainerNode"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC4nameSSSgvp":{"name":"name","abstract":"<p>Name of XML node</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC11stringValueSSSgvp":{"name":"stringValue","abstract":"<p>String value associated with XMLNode</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC4kindAC4KindOvp":{"name":"kind","abstract":"<p>Defines the type of XML node</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC8childrenSayAEGSgvp":{"name":"children","abstract":"<p>Children XML Nodes attached to this XML Node</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC6parentAESgvp":{"name":"parent","abstract":"<p>The parent XML Node (could be the XML Element or XML Document that owns this node)</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC8documentAEyFZ":{"name":"document()","abstract":"<p>Create XML document node</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC7element8withName11stringValueAESS_SSSgtFZ":{"name":"element(withName:stringValue:)","abstract":"<p>Create XML element node</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC4text11stringValueAESS_tFZ":{"name":"text(stringValue:)","abstract":"<p>Create raw text node</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC9attribute8withName11stringValueAESS_SStFZ":{"name":"attribute(withName:stringValue:)","abstract":"<p>Create XML attribute node</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC9namespace8withName11stringValueAESSSg_SStFZ":{"name":"namespace(withName:stringValue:)","abstract":"<p>Create XML namespace node</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC7comment11stringValueAESS_tFZ":{"name":"comment(stringValue:)","abstract":"<p>Create XML comment node</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC10childCountSivp":{"name":"childCount","abstract":"<p>Return number of children nodes</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC6detachyyF":{"name":"detach()","abstract":"<p>Detach XML node from its parent</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC8children2ofSayAEGSgAC4KindO_tF":{"name":"children(of:)","abstract":"<p>Return children XML Nodes of a specific kind</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC0A6StringSSvp":{"name":"xmlString","abstract":"<p>Output formatted XML as a String</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC0A6String7optionsSSAC7OptionsV_tF":{"name":"xmlString(options:)","abstract":"<p>Output formatted XML as a String with the supplied OptionSet</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC11descriptionSSvp":{"name":"description","abstract":"<p>CustomStringConvertible protocol</p>","parent_name":"Node"},"Classes/XML/Node.html#/s:11xml_encoder3XMLC4NodeC16debugDescriptionSSvp":{"name":"debugDescription","abstract":"<p>CustomDebugStringConvertible protocol</p>","parent_name":"Node"},"Classes/XML/Options.html#/s:SY8rawValue03RawB0Qzvp":{"name":"rawValue","parent_name":"Options"},"Classes/XML/Options.html#/s:11xml_encoder3XMLC7OptionsV23nodeCompactEmptyElementAEvpZ":{"name":"nodeCompactEmptyElement","abstract":"<p>if an XML Element has no children then output as <code>&lt;element /&gt;</code>. Default is to output <code>&lt;element&gt;&lt;/element&gt;</code></p>","parent_name":"Options"},"Classes/XML/Options.html#/s:11xml_encoder3XMLC7OptionsV15nodePrettyPrintAEvpZ":{"name":"nodePrettyPrint","abstract":"<p>output XML as human readable</p>","parent_name":"Options"},"Classes/XML/Options.html#/s:11xml_encoder3XMLC7OptionsV11nodeIsCDATAAEvpZ":{"name":"nodeIsCDATA","abstract":"<p>flag that XML Node should be output as CDATA</p>","parent_name":"Options"},"Classes/XML/Options.html#/s:11xml_encoder3XMLC7OptionsV22nodePreserveWhitespaceAEvpZ":{"name":"nodePreserveWhitespace","abstract":"<p>when parsing XML preserve the whitespace sections</p>","parent_name":"Options"},"Classes/XML/Options.html#/s:11xml_encoder3XMLC7OptionsV17nodePreserveCDATAAEvpZ":{"name":"nodePreserveCDATA","abstract":"<p>when parsing XML preserve the CDATA text elements</p>","parent_name":"Options"},"Classes/XML/Options.html#/s:s9OptionSetP8rawValuex03RawD0Qz_tcfc":{"name":"init(rawValue:)","parent_name":"Options"},"Classes/XML/Kind.html#/s:11xml_encoder3XMLC4KindO8documentyA2EmF":{"name":"document","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Classes/XML/Kind.html#/s:11xml_encoder3XMLC4KindO7elementyA2EmF":{"name":"element","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Classes/XML/Kind.html#/s:11xml_encoder3XMLC4KindO4textyA2EmF":{"name":"text","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Classes/XML/Kind.html#/s:11xml_encoder3XMLC4KindO9attributeyA2EmF":{"name":"attribute","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Classes/XML/Kind.html#/s:11xml_encoder3XMLC4KindO9namespaceyA2EmF":{"name":"namespace","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Classes/XML/Kind.html#/s:11xml_encoder3XMLC4KindO7commentyA2EmF":{"name":"comment","abstract":"<p>Undocumented</p>","parent_name":"Kind"},"Classes/XML/Kind.html":{"name":"Kind","abstract":"<p>XML node type</p>","parent_name":"XML"},"Classes/XML/Options.html":{"name":"Options","abstract":"<p>Options for parsing and outputting XML Data</p>","parent_name":"XML"},"Classes/XML/Node.html":{"name":"Node","abstract":"<p>Base class for all types of XML.Node</p>","parent_name":"XML"},"Classes/XML/ContainerNode.html":{"name":"ContainerNode","abstract":"<p>XML Node that has XML Children nodes</p>","parent_name":"XML"},"Classes/XML/Document.html":{"name":"Document","abstract":"<p>XML Document class</p>","parent_name":"XML"},"Classes/XML/Element.html":{"name":"Element","abstract":"<p>XML Element class</p>","parent_name":"XML"},"Classes/XML.html":{"name":"XML","abstract":"<p>Holding class for all the XML objects.</p>"},"Classes/XMLDecoder.html":{"name":"XMLDecoder","abstract":"<p>The wrapper class for decoding Codable classes from XMLElements</p>"},"Classes/XMLEncoder.html":{"name":"XMLEncoder","abstract":"<p>The wrapper class for encoding Codable classes to XMLElements</p>"},"Classes.html":{"name":"Classes","abstract":"<p>The following classes are available globally.</p>"},"Enums.html":{"name":"Enumerations","abstract":"<p>The following enumerations are available globally.</p>"},"Protocols.html":{"name":"Protocols","abstract":"<p>The following protocols are available globally.</p>"}}